# TODO: sync with v1, tags and endpoint /phrases/flex/{language}/{phrase}

openapi: 3.0.3
info:
  title: ARASAAC API
  description: Backend API example API declaration
  termsOfService: http://swagger.io/terms/
  contact:
    email: juandacorreo@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://api.arasaac.org/api/v2
  # - url: http://localhost:3000/v2

tags:
  - name: users
    description: User APIs

  - name: keywords
    description: List of words (or phrases) to define ARASAAC pictograms. Used in ARASAAC website for autocompletation searchbox. See [https://arasaac.org/pictograms/search](https://arasaac.org/pictograms/search).

paths:
  '/keywords/{language}':
    get:
      operationId: getAll
      x-eov-operation-handler: keywords
      description: Obtain a list of keywords for pictograms for an specific language (es,
        en...)
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - keywords
      parameters:
        - $ref: '#/components/parameters/Language'
      responses:
        '200':
          description: An object with the list of keywords for the specified language.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordsResponse'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/all/{language}:
    get:
      operationId: getAllPictograms
      x-eov-operation-handler: pictograms
      description: Obtain all pictograms data. The pictogram image url is composed based on the id field and the required resolution (300px, 500px or 2500px). For example, for pictogram with id 2350 and resolution 2500px would be https://static.arasaac.org/pictograms/2340/2340_2500.png
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
      responses:
        '200':
          description: Success
        '500':
          description: Error generating pictograms data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{idPictogram}:
    get:
      operationId: getPictogramFileById
      x-eov-operation-handler: pictograms
      description: Obtain pictogram image file in png format based on its key. Pictogram can be customized with color, resolution, plural...
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/IdPictogram'
        - $ref: '#/components/parameters/Plural'
        - $ref: '#/components/parameters/Color'
        - $ref: '#/components/parameters/BackgroundColor'
        - $ref: '#/components/parameters/Action'
        - $ref: '#/components/parameters/Resolution'
        - $ref: '#/components/parameters/Skin'
        - $ref: '#/components/parameters/Hair'
        - $ref: '#/components/parameters/Url'
        - $ref: '#/components/parameters/Download'
        - $ref: '#/components/parameters/Identifier'
        - $ref: '#/components/parameters/IdentifierPosition'
      responses:
        '200':
          description: Pictogram image file in PNG formats
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '500':
          description: Error generating PNG file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/{idPictogram}:
    get:
      operationId: getPictogramById
      x-eov-operation-handler: pictograms

      description: Obtain pictogram data based on its key (idPictogram). The pictogram image url can be generated based on pictogram key value and the desired resolution (300px, 500px or 2500px). For example https://static.arasaac.org/pictograms/2340/2340_2500.png for pictogram with key 2350 and resolution 2500px.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/IdPictogram'
      responses:
        '200':
          description: Success
        '500':
          description: Error generating pictograms data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{idPictogram}/languages/{languages}:
    get:
      operationId: getPictogramByIdWithLocales
      x-eov-operation-handler: pictograms
      description: Obtain pictogram data based on its key (idPictogram) for several languages. The pictogram image url can be generated based on pictogram key value and the desired resolution (300px, 500px or 2500px). For example https://static.arasaac.org/pictograms/2340/2340_2500.png for pictogram with key 2350 and resolution 2500px.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/IdPictogram'
        - $ref: '#/components/parameters/Languages'

      responses:
        '200':
          description: Success
        '500':
          description: Error generating pictograms data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/search/{searchText}:
    get:
      operationId: searchPictograms
      x-eov-operation-handler: pictograms
      description:
        Obtain a list of pictograms based on the searchText. The pictogram url can be generated based on pictogram id value and the desired resolution (300px, 500px or 2500px). There are some variations available for each pictogram using filename parameters (see below). You can see them in use and some more (available using API endpoint *GET /pictograms/{idPictogram}*) at https://arasaac.org/pictograms/en/2349


        **Filename parameters**

        - *action* for verbal tense (*past*, *future*)

        - *hair* for hair color (brown *A65E26*, blonde *FDD700*, red *ED4120*, black *020100*, gray *EFEFEF*, darkGray *AAABAB*, darkBrown *6A2703*)

        - *skin* for skin color (white *F5E5DE*, black *A65C17*, assian *F4ECAD*, mulatto *E3AB72*, aztec *CF9D7C*)

        - *plural*

        - *nocolor*


        **Examples**

        - https://static.arasaac.org/pictograms/2349/2349_2500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-past_300.png

        - https://static.arasaac.org/pictograms/2349/2349_nocolor_action-past_500.png

        - https://static.arasaac.org/pictograms/2349/2349_plural_nocolor_500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-past_hair-FDD700_500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-future_hair-020100_skin-A65C17_500.png
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/SearchText'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pictograms'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/bestsearch/{searchText}:
    get:
      operationId: bestSearchPictograms
      x-eov-operation-handler: pictograms
      description:
        Obtain best pictograms based on the searchText. The pictogram url can be generated based on pictogram id value and the desired resolution (300px, 500px or 2500px). There are some variations available for each pictogram using filename parameters (see below). You can see them in use and some more (available using API endpoint *GET /pictograms/{idPictogram}*) at https://arasaac.org/pictograms/en/2349


        **Filename parameters**

        - *action* for verbal tense (*past*, *future*)

        - *hair* for hair color (brown *A65E26*, blonde *FDD700*, red *ED4120*, black *020100*, gray *EFEFEF*, darkGray *AAABAB*, darkBrown *6A2703*)

        - *skin* for skin color (white *F5E5DE*, black *A65C17*, assian *F4ECAD*, mulatto *E3AB72*, aztec *CF9D7C*)

        - *plural*

        - *nocolor*


        **Examples**

        - https://static.arasaac.org/pictograms/2349/2349_2500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-past_300.png

        - https://static.arasaac.org/pictograms/2349/2349_nocolor_action-past_500.png

        - https://static.arasaac.org/pictograms/2349/2349_plural_nocolor_500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-past_hair-FDD700_500.png

        - https://static.arasaac.org/pictograms/2349/2349_action-future_hair-020100_skin-A65C17_500.png
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/SearchText'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pictograms'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/wordnet/{wordnet}/id/{synset}:
    get:
      operationId: getPictogramsBySynset
      x-eov-operation-handler: pictograms
      description: Obtain a list of pictograms based on the Wordnet identifier (synset). Wordnet version must be provided.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/Wordnet'
        - $ref: '#/components/parameters/Synset'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pictograms'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/days/{days}:
    get:
      operationId: getNewPictograms
      x-eov-operation-handler: pictograms
      description: Obtain pictograms created or updated in the last days.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/Days'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pictograms'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pictograms/{language}/new/{numItems}:
    get:
      operationId: getLastPictograms
      x-eov-operation-handler: pictograms
      description: Obtain last modified or publish pictograms.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - pictograms
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/NumItems'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pictograms'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/profile:
    get:
      operationId: getProfile
      x-eov-operation-handler: users
      description: Obtain user profile
      tags:
        - users
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      responses:
        200:
          description: User data like username, email, lists of favorites pictograms and materials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /materials/{id}:
    get:
      operationId: getMaterialById
      x-eov-operation-handler: materials
      description: Obtain a material based on its key.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The material id

      tags:
        - materials
      # define the type of response for Success "200" and Error
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaterialResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /materials/days/{days}:
    get:
      operationId: getNewMaterials
      x-eov-operation-handler: materials
      description: Obtain materials published in the last number of days.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      parameters:
        - in: path
          name: days
          required: true
          schema:
            type: integer
            default: 30
            minimum: 0
            maximum: 50
          description: Date range for materials published from the current date backwards. Minimum 0 days, maximum 50 days.
      tags:
        - materials
      # define the type of response for Success "200" and Error

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Materials'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /materials/new/{numItems}:
    get:
      operationId: getLastMaterials
      x-eov-operation-handler: materials
      description: Obtain last modified or published materials.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      parameters:
        - in: path
          name: numItems
          required: true
          schema:
            type: integer
            default: 30
            minimum: 1
            maximum: 100
          description: Total number of materials requested. Minimum 1, maximum 100.
      tags:
        - materials
      # define the type of response for Success "200" and Error

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Materials'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /materials/{language}/{searchText}:
    get:
      operationId: searchMaterials
      x-eov-operation-handler: materials
      description: Obtain a list of materials based on the search text parameter. It will search in the title and description fields. Language is used for search optimization.
      security:
        - oAuth2:
            - admin
            - translator
            - read
            - write
      tags:
        - materials
      # define the type of response for Success "200" and Error
      parameters:
        - $ref: '#/components/parameters/Language'
        - $ref: '#/components/parameters/SearchText'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Materials'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  parameters:
    Language:
      name: language
      description: Languages than we currently use for pictograms searches.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Locales'

    Languages:
      name: languages
      description: Languages than we currently use for pictograms searches.
      in: path
      required: true
      schema:
        type: array
        # collectionFormat: csv
        items:
          $ref: '#/components/schemas/Locales'

    Wordnet:
      name: wordnet
      in: path
      required: true
      description: Wordnet version.
      schema:
        type: string
        enum: ['1.5', '1.6', '1.7', '1.7.1', '2.0', '2.1', '3.0', '3.1']

    Days:
      name: days
      description: Material identifier
      in: path
      required: true
      schema:
        type: integer
        default: 30

    Synset:
      name: synset
      in: path
      description: Wordnet identifier (synset).
      required: true
      schema:
        type: string

    SearchText:
      name: searchText
      in: path
      description: Keywords for searches. By default, it makes an OR search on all the specified keywords. In case you would like to perform an exact phrase search (logical AND), you can do so by specifying double quotes in the search text. Prefixing a search keyword with – (minus sign) excludes all the documents that contain the negated term.
      required: true
      schema:
        type: string

    NumItems:
      name: numItems
      description: Number of items
      in: path
      required: true
      schema:
        type: integer

    IdPictogram:
      name: idPictogram
      description: Pictogram identifier
      in: path
      required: true
      schema:
        type: integer

    Plural:
      name: plural
      in: query
      description: Pictogram in singular or with plural symbol. It should only be applied to pictograms that represent a noun.
      schema:
        type: boolean
    Color:
      name: color
      in: query
      description: Pictogram in color (default value) or in black and white.
      schema:
        type: boolean
    BackgroundColor:
      name: backgroundColor
      in: query
      description: Hexadecimal value to set the background color of the pictogram. The pictograms are transparent by default (value 'none').
      schema:
        type: string
    Action:
      name: action
      in: query

      description: Add an extra symbol for indicating a past or future status. It should only be applied to pictograms that represent an action or a verb.
      schema:
        type: string
        enum: ['past', 'future']
    Skin:
      name: skin
      in: query
      description: Usefull for pictograms with people. Customize its skin
      schema:
        type: string
        enum: ['white', 'black', 'assian', 'mulatto', 'aztec']
    Hair:
      name: hair
      in: query
      description: Usefull for pictograms with people. Customize its hair.
      schema:
        type: string
        enum: ['blonde', 'brown', 'darkBrown', 'gray', 'darkGray', 'red', 'black']

    Resolution:
      name: resolution
      in: query
      description: Pictogram resolution. 500px by default.
      schema:
        type: integer
        enum: [500, 2500]
    Identifier:
      name: identifier
      in: query
      description: Classify the type of pictogram
      schema:
        type: string
        enum: ['classroom', 'health', 'library', 'office']
    IdentifierPosition:
      name: identifierPosition
      in: query
      description: Identity position. Only applies if an identifier has been provided.
      schema:
        type: string
        enum: ['left', 'right']
    Url:
      name: url
      in: query
      description: Get pictogram url or binary data (default value)
      schema:
        type: boolean
    Download:
      name: download
      in: query
      description: Defines if the pictogram response will be render in the browser or saved as a file (sets header Content Disposition as attachment). Only applies if url parameter is binary data.
      schema:
        type: boolean
        default: false

  securitySchemes:
    oAuth2:
      type: oauth2
      description: See https://arasaac.org/developers
      flows:
        clientCredentials:
          tokenUrl: https://auth.arasaac.org/oauth/token/
          # scope read is provided by default
          scopes:
            admin: Manage users and material publication
            translator: add translations to materials
            read: search pictograms, materials, keywords
            write: upload materials

  schemas:
    Locales:
      type: string
      enum:
        - an
        - ar
        - bg
        - br
        - ca
        - cs
        - de
        - el
        - en
        - es
        - et
        - eu
        - fa
        - fr
        - gl
        - he
        - hr
        - hu
        - it
        - ko
        - lt
        - lv
        - mk
        - nl
        - pl
        - pt
        - ro
        - ru
        - sk
        - sq
        - sv
        - sr
        - val
        - uk
        - zh

    ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string
        err:
          type: string

    KeywordsResponse:
      type: object
      properties:
        locale:
          $ref: '#/components/schemas/Locales'
        words:
          type: array
          items:
            type: string

    UserProfileResponse:
      properties:
        email:
          type: string
        name:
          type: string
        username:
          type: string
        lastlogin:
          type: string
        locale:
          $ref: '#/components/schemas/Locales'
        role:
          type: string
          enum:
            - admin
            - translator
            - user
        materials:
          type: object
        pictos:
          type: object
        provider:
          type: object

    Material:
      required:
        - authors
        - desc
        - files
        - title
      type: object
      properties:
        _id:
          type: string
        activity:
          type: array
          items:
            type: integer
        area:
          type: array
          items:
            type: integer
        authors:
          type: array
          items:
            type: object
        created:
          type: string
          format: date-time
        desc:
          type: string
        downloads:
          type: number
        file:
          type: object
        files:
          type: object
        id:
          type: integer
        screenshots:
          type: object
        lang:
          type: string
        language:
          type: string
        lastUpdate:
          type: string
          format: date-time
        score:
          type: number
        status:
          type: integer
        title:
          type: string
        translations:
          type: array
          items:
            type: object
    Materials:
      type: array
      items:
        $ref: '#/components/schemas/Material'
    GetMaterialResponse:
      properties:
        material:
          type: object

    Keyword:
      properties:
        idKeyword:
          type: integer
        keyword:
          type: string
        plural:
          type: string
        idLocution:
          type: string
        meaning:
          type: string
        type:
          type: integer
        lse:
          type: integer

    Pictogram:
      properties:
        _id:
          type: integer
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
        schematic:
          type: boolean
        sex:
          type: boolean
        violence:
          type: boolean
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        downloads:
          type: integer
        categories:
          type: array
          items:
            type: string
        synsets:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        desc:
          type: string

    Pictograms:
      type: array
      items:
        $ref: '#/components/schemas/Pictogram'
